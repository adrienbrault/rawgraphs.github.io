{"version":3,"sources":["webpack:///./src/templates/blogTemplate.module.scss","webpack:///./src/templates/blogTemplate.js"],"names":["module","exports","Template","data","location","markdownRemark","frontmatter","html","image","widgets","title","subtitle","link","className","styles","post","categories","date","author","alt","src","publicURL","contentBox","dangerouslySetInnerHTML","__html","tags","map","tag","key","to","share","url","href","size","round","hashtags","widget","index"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,KAAO,mCAAmC,MAAQ,oCAAoC,WAAa,0CAA0C,KAAO,qC,kCCDtK,6LAae,SAASC,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/BC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAUF,EAAVE,MAeFC,EAAUH,EAAYG,QAAUH,EAAYG,QAb3B,CACrB,CACEC,MAAO,oBACPC,SAAU,uDACVC,KAAM,yCAER,CACEF,MAAO,kBACPC,SAAU,iDACVC,KAAM,WAMV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAOJ,EAAYI,QACxB,yBAAKG,UAAS,aAAeC,IAAOC,MAClC,yBAAKF,UAAU,YACb,yBAAKA,UAAU,oCACb,wBAAIA,UAAU,6BACXP,EAAYU,WAAW,IAE1B,4BAAKV,EAAYI,OACjB,uBAAGG,UAAU,SACVP,EAAYW,KADf,QAC0BX,EAAYY,UAI1C,yBAAKL,UAAU,OACZL,GACC,yBAAKK,UAAU,aACb,yBACEA,UAAU,0BACVM,IAAKb,EAAYI,MACjBU,IAAKZ,EAAMa,aAIjB,yBAAKR,UAAU,aACb,yBACEA,UAAWC,IAAOQ,WAClBC,wBAAyB,CAAEC,OAAQjB,KAErC,6BACA,uBAAGM,UAAWC,IAAOW,MAArB,QACQ,IACLnB,EAAYmB,KAAKC,KAAI,SAAAC,GAAG,OACvB,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAG,KAChBF,OAIP,6BACA,yBAAKd,UAAWC,IAAOgB,OACrB,kBAAC,IAAD,CAAqBC,IAAK3B,EAAS4B,KAAMnB,UAAU,QACjD,kBAAC,IAAD,CAAcoB,KAAM,GAAIC,OAAO,KAEjC,kBAAC,IAAD,CACEH,IAAK3B,EAAS4B,KACdtB,MAAOJ,EAAYI,MACnByB,SAAU,CAAC,cAEX,kBAAC,IAAD,CAAaF,KAAM,GAAIC,OAAO,SAMxC,yBAAKrB,UAAU,2BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACZJ,EAAQiB,KAAI,SAACU,EAAQC,GAAT,OACX,kBAAC,IAAD,eACET,IAAKS,GACDD","file":"component---src-templates-blog-template-js-cdb1569571c327534df3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"blogTemplate-module--post--2nGjm\",\"share\":\"blogTemplate-module--share--3xR8V\",\"contentBox\":\"blogTemplate-module--content-box--rZD6o\",\"tags\":\"blogTemplate-module--tags--Sb7Rm\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  FacebookIcon,\n  TwitterIcon,\n} from \"react-share\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport DiscoverMoreWidgetPost from \"../components/DiscoverMoreWidgetPost\"\nimport styles from \"./blogTemplate.module.scss\"\n\nexport default function Template({ data, location }) {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  const { image } = frontmatter\n\n  const defaultWidgets = [\n    {\n      title: \"RAWgraphs is open\",\n      subtitle: \"do you want to hack RAWGraphs or install it locally?\",\n      link: \"https://github.com/densitydesign/raw/\",\n    },\n    {\n      title: \"About RAWGraphs\",\n      subtitle: \"Everything you need to know about the project.\",\n      link: \"/about\",\n    },\n  ]\n\n  const widgets = frontmatter.widgets ? frontmatter.widgets : defaultWidgets\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className={`container ${styles.post}`}>\n        <div className=\"row my-5\">\n          <div className=\"col-sm-8 offset-sm-2 text-center\">\n            <h3 className=\"text-uppercase green-text\">\n              {frontmatter.categories[0]}\n            </h3>\n            <h1>{frontmatter.title}</h1>\n            <p className=\"small\">\n              {frontmatter.date}, by {frontmatter.author}\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          {image && (\n            <div className=\"col-sm-12\">\n              <img\n                className=\"img-fluid img-thumbnail\"\n                alt={frontmatter.title}\n                src={image.publicURL}\n              ></img>\n            </div>\n          )}\n          <div className=\"col-sm-12\">\n            <div\n              className={styles.contentBox}\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            <hr />\n            <p className={styles.tags}>\n              Tags:{\" \"}\n              {frontmatter.tags.map(tag => (\n                <Link key={tag} to=\"/\">\n                  {tag}\n                </Link>\n              ))}\n            </p>\n            <hr />\n            <div className={styles.share}>\n              <FacebookShareButton url={location.href} className=\"mr-2\">\n                <FacebookIcon size={32} round={false} />\n              </FacebookShareButton>\n              <TwitterShareButton\n                url={location.href}\n                title={frontmatter.title}\n                hashtags={[\"rawgraphs\"]}\n              >\n                <TwitterIcon size={32} round={false} />\n              </TwitterShareButton>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container-fluid grey-bg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            {widgets.map((widget, index) => (\n              <DiscoverMoreWidgetPost\n                key={index}\n                {...widget}\n              ></DiscoverMoreWidgetPost>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM Do, YYYY\")\n        path\n        title\n        author\n        categories\n        tags\n        widgets {\n          title\n          subtitle\n          link\n        }\n        image {\n          publicURL\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}