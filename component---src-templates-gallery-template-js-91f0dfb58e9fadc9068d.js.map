{"version":3,"sources":["webpack:///./src/components/AskInfo.js","webpack:///./src/templates/galleryTemplate.module.scss","webpack:///./src/components/askInfo.module.scss","webpack:///./src/templates/galleryTemplate.js"],"names":["AskInfo","question","button","link","bgLight","btGreen","className","styles","askInfo","href","target","rel","module","exports","Template","data","pageContext","markdownRemark","frontmatter","html","prevPage","nextPage","title","src","image","publicURL","alt","gallery","author_personal_page","submitted_by","description","dangerouslySetInnerHTML","__html","visual_models_used","join","external_link","navigation","to","path","pageQuery"],"mappings":"4FAAA,8CA8BeA,IA3BC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,QAApC,OACd,yBACEC,UAAS,yDACPC,IAAOC,QADA,KAELJ,EAAU,WAAa,KAE3B,yBAAKE,UAAU,aACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,gBAAgBL,IAEhC,yBAAKK,UAAU,YACb,uBAAGG,KAAMN,EAAMO,OAAO,SAASC,IAAI,uBACjC,4BACEL,UAAS,+BACPD,EAAU,YAAc,KAGzBH,U,qBCpBfU,EAAOC,QAAU,CAAC,QAAU,yCAAyC,YAAc,6CAA6C,WAAa,8C,qBCA7ID,EAAOC,QAAU,CAAC,QAAU,oC,kCCD5B,mMAQe,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,YAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOJ,EAAYI,QACxB,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,6BACE,wBAAIA,UAAU,OAAd,WACA,wBAAIA,UAAU,SACZ,6FAOV,kBAAC,IAAD,CACEL,SAAS,sDACTC,OAAO,UACPC,KAAK,sCACLC,SAAO,IAET,yBAAKE,UAAU,2BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,6BACE,yBACEA,UAAU,YACViB,IAAKL,EAAYM,MAAMC,UACvBC,IAAKR,EAAYI,UAIvB,yBAAKhB,UAAU,wCACb,6BACE,4BAAKY,EAAYI,OACjB,yBAAKhB,UAAWC,IAAOoB,SACrB,wBAAIrB,UAAU,6BAAd,gBACA,2BACGY,EAAYU,qBAAqB,GAChC,uBACEnB,KAAMS,EAAYU,qBAClBlB,OAAO,SACPC,IAAI,uBAEHO,EAAYW,cAGf,8BAAOX,EAAYW,gBAIzB,yBAAKvB,UAAcC,IAAOoB,QAAZ,IAAuBpB,IAAOuB,aAC1C,wBAAIxB,UAAU,6BAAd,eACA,yBAAKyB,wBAAyB,CAAEC,OAAQb,MAE1C,yBAAKb,UAAS,GAAKC,IAAOoB,SACxB,wBAAIrB,UAAU,6BAAd,eACA,uBAAGA,UAAU,SACVY,EAAYe,mBAAmBC,KAAK,QAGxChB,EAAYiB,cAAc,IACzB,yBAAK7B,UAAS,GAAKC,IAAOoB,SACxB,wBAAIrB,UAAU,6BAAd,iBACA,uBAAGA,UAAU,SACX,uBACEG,KAAMS,EAAYiB,cAClBzB,OAAO,SACPC,IAAI,uBAHN,mBAYR,yBAAKL,UAAWC,IAAO6B,YACpBhB,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAASkB,MACjB,kBAAC,IAAD,OAGJ,kBAAC,OAAD,CAAMD,GAAG,YAAT,uBACChB,GACC,kBAAC,OAAD,CAAMgB,GAAIhB,EAASiB,MACjB,kBAAC,IAAD,aAYb,IAAMC,EAAS","file":"component---src-templates-gallery-template-js-91f0dfb58e9fadc9068d.js","sourcesContent":["import React from \"react\"\nimport styles from \"./askInfo.module.scss\"\n\nconst AskInfo = ({ question, button, link, bgLight, btGreen }) => (\n  <div\n    className={`container-fluid text-center text-md-left py-3 py-md-0 ${\n      styles.askInfo\n    } ${bgLight ? \"bg-light\" : \"\"}`}\n  >\n    <div className=\"container\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-sm-9\">\n          <h3 className=\"my-3 my-md-0\">{question}</h3>\n        </div>\n        <div className=\"col-sm-3\">\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <button\n              className={`btn btn-default btn-larger ${\n                btGreen ? \"btn-green\" : \"\"\n              }`}\n            >\n              {button}\n            </button>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default AskInfo\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"galleryTemplate-module--gallery--P2Czv\",\"description\":\"galleryTemplate-module--description--3sWgB\",\"navigation\":\"galleryTemplate-module--navigation--2pkwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"askInfo\":\"askInfo-module--ask-info--3UwTp\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { FaArrowCircleRight, FaArrowCircleLeft } from \"react-icons/fa\"\nimport AskInfo from \"../components/AskInfo\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport styles from \"./galleryTemplate.module.scss\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  pageContext,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  const { prevPage, nextPage } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"container\">\n        <div className=\"row main-header\">\n          <div className=\"col-12 col-sm-8\">\n            <div>\n              <h1 className=\"big\">Gallery</h1>\n              <h2 className=\"light\">\n                <p>A place to showcase the best examples of RAWGraphs in use</p>\n              </h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <AskInfo\n        question=\"Have you done something interesting with RAWGraphs?\"\n        button=\"submit!\"\n        link=\"https://forms.gle/WnqxUfwnE3nVt58RA\"\n        bgLight\n      ></AskInfo>\n      <div className=\"container-fluid grey-bg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-6 col-md-8\">\n              <div>\n                <img\n                  className=\"img-fluid\"\n                  src={frontmatter.image.publicURL}\n                  alt={frontmatter.title}\n                ></img>\n              </div>\n            </div>\n            <div className=\"col-sm-6 col-md-4 d-flex flex-column\">\n              <div>\n                <h2>{frontmatter.title}</h2>\n                <div className={styles.gallery}>\n                  <h4 className=\"text-uppercase green-text\">submitted by</h4>\n                  <p>\n                    {frontmatter.author_personal_page[0] ? (\n                      <a\n                        href={frontmatter.author_personal_page}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {frontmatter.submitted_by}\n                      </a>\n                    ) : (\n                      <span>{frontmatter.submitted_by}</span>\n                    )}\n                  </p>\n                </div>\n                <div className={`${styles.gallery} ${styles.description}`}>\n                  <h4 className=\"text-uppercase green-text\">description</h4>\n                  <div dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className={`${styles.gallery}`}>\n                  <h4 className=\"text-uppercase green-text\">charts used</h4>\n                  <p className=\"small\">\n                    {frontmatter.visual_models_used.join(\", \")}\n                  </p>\n                </div>\n                {frontmatter.external_link[0] && (\n                  <div className={`${styles.gallery}`}>\n                    <h4 className=\"text-uppercase green-text\">external link</h4>\n                    <p className=\"small\">\n                      <a\n                        href={frontmatter.external_link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Project page\n                      </a>\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div className={styles.navigation}>\n                {prevPage && (\n                  <Link to={prevPage.path}>\n                    <FaArrowCircleLeft></FaArrowCircleLeft>\n                  </Link>\n                )}\n                <Link to=\"/gallery\">Back to the gallery</Link>\n                {nextPage && (\n                  <Link to={nextPage.path}>\n                    <FaArrowCircleRight></FaArrowCircleRight>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        submitted_by\n        author_personal_page\n        visual_models_used\n        external_link\n        image {\n          publicURL\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}